<Window x:Class="RLCServerApplication.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RLCServerApplication.Views"
        xmlns:vm="clr-namespace:RLCServerApplication.ViewModels"
        xmlns:player="clr-namespace:AudioPlayer.TimeLine;assembly=AudioPlayerControl"
        mc:Ignorable="d"
        Title="MainWindowView" Height="450" Width="800"
        d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
        >

    <Window.Resources>
        <DataTemplate x:Key="SettingsTemplate" DataType="{x:Type vm:SettingsViewModel}">
            <local:SettingsView></local:SettingsView>
        </DataTemplate>

        <DataTemplate x:Key="RemoteClientsTemplate" DataType="{x:Type vm:RemoteClientsViewModel}">
            <local:RemoteClientsView></local:RemoteClientsView>
        </DataTemplate>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Height="auto">
            <MenuItem Header="Файл">
                <MenuItem Header="Создать"></MenuItem>
            </MenuItem>
            <MenuItem Header="Проект">
                <MenuItem Header="Добавить аудиотрек" Command="{Binding AddAudioTrackCommand}"></MenuItem>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                <RadioButton Margin="1, 2" Padding="5,0" 
                             Content="Настройка" 
                             GroupName="ToggleGroup" 
                             Style="{StaticResource {x:Type ToggleButton}}" 
                             IsChecked="True" 
                             Command="{Binding SwitchToSetupCommand}"/>
                <RadioButton Margin="1, 2" Padding="5,0" 
                             Content="Тест" 
                             GroupName="ToggleGroup" 
                             Style="{StaticResource {x:Type ToggleButton}}"
                             Command="{Binding SwitchToTestCommand}"/>
                <RadioButton Margin="1, 2" Padding="5,0" 
                             Content="Работа" 
                             GroupName="ToggleGroup" 
                             Style="{StaticResource {x:Type ToggleButton}}"
                             Command="{Binding SwitchToWorkCommand}"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Margin="5" Command="{Binding PlayCommand}">Play</Button>
                    <Button Margin="5" Command="{Binding StopCommand}">Stop</Button>
                    <Button Margin="5" Command="{Binding PauseCommand}">Pause</Button>
                </StackPanel>
                <Label Grid.Row="1" x:Name="LabelTime" HorizontalAlignment="Right" Content="{Binding Player.CurrentTime}" ContentStringFormat="{}{0:hh}:{0:mm}:{0:ss}"/>
            </Grid>
            <player:WaveformTimeline Grid.Column="2" x:Name="Player" HorizontalAlignment="Stretch"></player:WaveformTimeline>
        </Grid>

        <TabControl Grid.Row="3" TabStripPlacement="Left">
            <TabItem Header="Настройки" Padding="10">
                <ContentPresenter 
                    Content="{Binding SettingsViewModel}" 
                    ContentTemplate="{StaticResource SettingsTemplate}" 
                    IsEnabled="{Binding ProjectController.WorkMode}"/>
            </TabItem>

            <TabItem Header="Клиенты" Padding="10">
                <ContentPresenter Content="{Binding RemoteClientsViewModel}" ContentTemplate="{StaticResource RemoteClientsTemplate}" />
            </TabItem>
        </TabControl>
    </Grid>
</Window>
